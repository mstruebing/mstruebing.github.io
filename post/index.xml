<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Max Strübing</title>
    <link>https://maex.me/post/</link>
    <description>Recent content in Posts on Max Strübing</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 13 Jan 2017 06:36:06 +0200</lastBuildDate>
    
	<atom:link href="https://maex.me/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Why I like wc</title>
      <link>https://maex.me/2017/01/why-i-like-wc/</link>
      <pubDate>Fri, 13 Jan 2017 06:36:06 +0200</pubDate>
      
      <guid>https://maex.me/2017/01/why-i-like-wc/</guid>
      <description>Wc is a small handy tool which I use often. I&amp;rsquo;m calling it word-count in my head.(Today I learned by looking wc up on Wikipedia: it is actually called word count) It is part of the GNU coreutils it should be on nearly any system.
What can you do with wc? With wc you can simply count lines, words or characters of a file or string, and thats it. Nothing more or less.</description>
    </item>
    
    <item>
      <title>You might not need scripty</title>
      <link>https://maex.me/2016/11/you-might-not-need-scripty/</link>
      <pubDate>Mon, 14 Nov 2016 06:36:06 +0200</pubDate>
      
      <guid>https://maex.me/2016/11/you-might-not-need-scripty/</guid>
      <description>Because no one should be shell-scripting inside a JSON file.
 That&amp;rsquo;s cool, but why should I use scripty? I could do this well without.
What is the advantage of another dependency in my project?
Recently I had to work on a project and the build were broken because of an update of scripty. That wouldn&amp;rsquo;t be a problem if our version constraints were more strict or we would had a shrinkwrap.</description>
    </item>
    
    <item>
      <title>Execute multiple commands on files with find</title>
      <link>https://maex.me/2016/11/execute-multiple-commands-on-files-with-find/</link>
      <pubDate>Fri, 04 Nov 2016 06:36:06 +0200</pubDate>
      
      <guid>https://maex.me/2016/11/execute-multiple-commands-on-files-with-find/</guid>
      <description>Hello everybody In this post I will show you how you can execute multiple commands on files via find.
Firstly how to use find:
find -type f -iname &amp;#34;*.extension&amp;#34; This will find all files under the working dir with the given extension. Of course you can use other things like filesize, user who owns that file etc. But for that example I will using this.
For example if we have multiple .</description>
    </item>
    
    <item>
      <title>Writing a simple CLI-tool in Haskell</title>
      <link>https://maex.me/2016/06/writing-a-simple-cli-tool-in-haskell/</link>
      <pubDate>Sat, 25 Jun 2016 06:36:06 +0200</pubDate>
      
      <guid>https://maex.me/2016/06/writing-a-simple-cli-tool-in-haskell/</guid>
      <description>Hello folks,
I want to write a small tutorial on how to write a simple CLI-tool in Haskell.
For all who did not know, Haskell is a pure functional programming language which was released in 1990. What I personally like the most is list comprehension, this is a really powerful and great feature. But there are also other really cool things like maybe for example. It is really packed with a lot of cool stuff.</description>
    </item>
    
  </channel>
</rss>